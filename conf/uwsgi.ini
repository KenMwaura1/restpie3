
# uwsgi daemon config
# https://uwsgi-docs.readthedocs.io/en/latest/Options.html

# local dev config
[uwsgi-debug]
env = FLASK_ENV=development
env = PYSRV_CONFIG_PATH=conf/server-config.json
http = localhost:8100
master = 1
wsgi-file = py/main.py
callable = app
# processes = 1, otherwise autoreload fails
processes = 1
stats = 127.0.0.1:9100
virtualenv = $(SERVER_VIRTUALENV)
py-autoreload = 1
#harakiri=10 - disable locally, otherwise autoreload fails
disable-logging=1
spooler-quiet=1
spooler = /tmp/my_spooler
spooler-frequency=5
# static files - serve the frontend from elsewhere
static-map = /robots.txt=conf/robots.txt
static-map = /favicon.ico=conf/favicon.ico


# test/production server config
[uwsgi-production]
env = PYSRV_CONFIG_PATH=/app/real-server-config.json
http = 0.0.0.0:80
master = 1
wsgi-file = py/main.py
callable = app
processes = 4
chdir = /app/
pythonpath = /app/py/
# deploy touches this file and uwsgi restarts
touch-reload=/app/VERSION
harakiri=20
disable-logging=1
spooler-quiet=1
spooler-frequency=5
spooler = /tmp/pysrv_spooler
vacuum = true
# log to file (and stdout too so docker run locally works)
logger = file:/app/app.log
logger = stdio
# run as this user - MUST SET LOWER PRIVILEGES!
; uid=appuser
; gid=appgroup
# workers live max this many requests and secs
max-requests=100
max-worker-lifetime=36000
# static files - serve the frontend from elsewhere
static-map = /robots.txt=conf/robots.txt
static-map = /favicon.ico=conf/favicon.ico

